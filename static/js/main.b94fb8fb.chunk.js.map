{"version":3,"sources":["helpers/reducer.js","components/NominatedMovies.jsx","components/SingleMovie.jsx","components/Spinner.jsx","components/MovieList.jsx","components/Input.jsx","helpers/OmdbSearch.js","components/Header.jsx","App.js","hooks/useNominations.js","index.js"],"names":["reducer","state","action","type","movie","id","filter","imdbID","Error","useStyles","makeStyles","theme","button","margin","spacing","NominatedMovies","movies","removeNomination","nominations","classes","length","Grid","container","className","map","i","item","xs","key","Title","Year","Button","variant","color","size","startIcon","onClick","SingleMovie","is_disabled","setNominate","disabled","props","height","width","MovieList","nominateMovie","removeMovie","loaded","singleMovie","find","n","Input","setMovies","setLoading","useState","inputName","setInputName","delayedQuery","useCallback","debounce","query","axios","get","process","then","data","Search","catch","error","console","log","OmdbSearch","useEffect","cancel","TextField","inputProps","style","fontSize","InputLabelProps","fullWidth","label","value","onChange","e","target","placeholder","App","useReducer","dispatch","useNominations","FullNominationList","setFullNominationList","localStorage","getItem","JSON","parse","forEach","x","setItem","stringify","Container","maxWidth","direction","alignItems","justify","minHeight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b94fb8fb.chunk.js","sourcesContent":["export const NOMINATE = \"NOMINATE\";\nexport const REMOVE = \"REMOVE\";\n\nexport default function reducer(state, action) {\n  if (action.type === NOMINATE) {\n    const { movie } = action;\n    return [...state, movie];\n  }\n\n  if (action.type === REMOVE) {\n    const { id } = action;\n\n    return state.filter((movie) => movie.imdbID !== id);\n  }\n\n  throw new Error(\n    `Tried to reduce with unsupported action type: ${action.type}`\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Grid } from \"@material-ui/core\";\n\nimport \"./NominatedMovies.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function NominatedMovies({\n  movies,\n  removeNomination,\n  nominations,\n}) {\n  const classes = useStyles();\n\n  if (nominations.length > 0)\n    return (\n      <Grid container className={\"Nominated-Movie-List\"}>\n        <ul>\n          {movies.map((movie, i) => {\n            return (\n              <Grid item xs={12}>\n                <li key={i} className={\"Nominated-Movie\"}>\n                  {movie.Title}({movie.Year})\n                  <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    size=\"small\"\n                    className={classes.button}\n                    startIcon={<DeleteIcon />}\n                    onClick={() => removeNomination(movie.imdbID)}\n                  >\n                    Remove\n                  </Button>\n                </li>\n              </Grid>\n            );\n          })}\n        </ul>\n      </Grid>\n    );\n\n  return <></>;\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport \"./SingleMovie.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function SingleMovie({ movie, is_disabled, setNominate }) {\n  const classes = useStyles();\n\n  const onClick = () => {\n    setNominate(movie);\n  };\n\n  return (\n    <li className={\"Single-Movie\"}>\n      {movie.Title}({movie.Year})\n      {/* {movie.Poster !== \"N/A\" ? (\n        <img className={\"Poster\"} src={movie.Poster} alt=\"Movie Poster\"></img>\n      ) : (\n        <p>No poster</p>\n      )} */}\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        size=\"small\"\n        className={classes.button}\n        startIcon={<FavoriteBorderIcon />}\n        onClick={onClick}\n        disabled={is_disabled}\n      >\n        Nominate\n      </Button>\n    </li>\n  );\n}\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport \"./Spinner.css\";\n\nexport default function (props) {\n  return (\n    <Loader\n      className={\"Loader\"}\n      type=\"Grid\"\n      color=\"#d1c499\"\n      height={150}\n      width={150}\n    />\n  );\n}\n","import React from \"react\";\nimport SingleMovie from \"./SingleMovie\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Spinner from \"./Spinner\";\nimport \"./MovieList.css\";\n\nexport default function MovieList({\n  movies,\n  nominations,\n  nominateMovie,\n  removeMovie,\n  loaded,\n}) {\n  const movieNominated = (movie) => {\n    return !!nominations.find((n) => n.imdbID === movie.imdbID);\n  };\n\n  const allNominationsSet = () => {\n    return nominations.length === 5;\n  };\n\n  if (movies && loaded) {\n    return (\n      <Grid container className={(\"Movie-List\", \"fade-in\")}>\n        <ul>\n          {movies.map((singleMovie, i) => {\n            return (\n              <Grid item xs={12}>\n                <SingleMovie\n                  key={i}\n                  movie={singleMovie}\n                  is_disabled={\n                    movieNominated(singleMovie) || allNominationsSet()\n                  } // boolean\n                  setNominate={nominateMovie}\n                  removeMovie={removeMovie}\n                />\n              </Grid>\n            );\n          })}\n        </ul>\n      </Grid>\n    );\n  }\n  if (!loaded) {\n    return <Spinner />;\n  }\n  return <></>;\n}\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { debounce } from \"lodash\";\nimport TextField from \"@material-ui/core/TextField\";\nimport OmdbSearch from \"../helpers/OmdbSearch\";\nimport \"./Input.css\";\n\nexport default function Input({ setMovies, setLoading }) {\n  const [inputName, setInputName] = useState(\"\");\n\n  const onChange = (e) => {\n    setLoading(false);\n    setInputName(e.target.value);\n  };\n\n  const updateQuery = () => {\n    // A search query api call.\n    OmdbSearch(inputName, setMovies, setLoading);\n  };\n\n  const delayedQuery = useCallback(debounce(updateQuery, 500), [inputName]);\n\n  useEffect(() => {\n    delayedQuery();\n\n    // Cancel previous debounce calls during useEffect cleanup.\n    return delayedQuery.cancel;\n  }, [inputName, delayedQuery]);\n\n  return (\n    <TextField\n      inputProps={{ style: { fontSize: 40 } }}\n      InputLabelProps={{ style: { fontSize: 20 } }}\n      fullWidth\n      label=\"Search Omdb and nominate a movie!\"\n      value={inputName}\n      onChange={onChange}\n      placeholder=\"Enter a Movie Title\"\n    />\n  );\n}\n","import axios from \"axios\";\n\nexport default function OmdbSearch(query, setMovies, setLoading) {\n  return axios\n    .get(\n      `http://www.omdbapi.com/?i=tt3896198&apikey=${process.env.REACT_APP_API_KEY}&s=${query}`\n    )\n    .then(({ data }) => {\n      setMovies(data.Search);\n      setLoading(true);\n    })\n    .catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n}\n","import React from \"react\";\nimport \"./Header.css\";\n\nexport default function (props) {\n  return <header>The Shoppies</header>;\n}\n","import React, { useState, useEffect } from \"react\";\n\n// CSS\nimport \"./App.css\";\n\n//Hooks\nimport useNominations from \"./hooks/useNominations\";\n\n// React Components\nimport NominatedMovies from \"./components/NominatedMovies\";\nimport MovieList from \"./components/MovieList\";\nimport Input from \"./components/Input\";\nimport Header from \"./components/Header\";\n// Material UI Components\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\n\nexport default function App() {\n  const [movies, setMovies] = useState([]);\n  const { nominations, nominateMovie, removeNomination } = useNominations();\n  const [loaded, setLoading] = useState();\n  const [FullNominationList, setFullNominationList] = useState(false);\n\n  useEffect(() => {\n    const isNominationListFull = () => {\n      nominations.length === 5\n        ? setFullNominationList(true)\n        : setFullNominationList(false);\n    };\n    isNominationListFull();\n  }, [nominations]);\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"my-nominations\");\n    if (data) {\n      console.log(data);\n      const parsedData = JSON.parse(data);\n      parsedData.forEach((x) => nominateMovie(x));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"my-nominations\", JSON.stringify(nominations));\n  });\n\n  return (\n    <>\n      <Container className={\"Main-Container\"} maxWidth=\"lg\">\n        <Header />\n        <h3 className={\"Nominate-Statement\"}>\n          Nominate your five favorite movies for the shoppies award!\n        </h3>\n        <Grid\n          container\n          spacing={0}\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\"\n          style={{ minHeight: \"20vh\" }}\n        >\n          <Grid item xs={12}>\n            <Input setMovies={setMovies} setLoading={setLoading}></Input>\n          </Grid>\n          {FullNominationList && (\n            <h3 className={\"Notification\"}>Amazing nominations list!</h3>\n          )}\n        </Grid>\n        <Grid\n          container\n          spacing={0}\n          direction=\"row\"\n          alignItems=\"center\"\n          justify=\"center\"\n          style={{ minHeight: \"40vh\" }}\n        >\n          <Grid item xs={6}>\n            <h1 className={\"List-Header\"}>Movie List:</h1>\n            <MovieList\n              loaded={loaded}\n              movies={movies}\n              nominations={nominations}\n              nominateMovie={nominateMovie}\n            ></MovieList>\n          </Grid>\n          <Grid item xs={6}>\n            <h1 className={\"List-Header\"}>Nominated Movies:</h1>\n            <NominatedMovies\n              movies={nominations}\n              removeNomination={removeNomination}\n              nominations={nominations}\n            />\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n","import { useReducer } from \"react\";\nimport reducer, { NOMINATE, REMOVE } from \"../helpers/reducer\";\n\nexport default function useNominations() {\n  const [nominations, dispatch] = useReducer(reducer, []);\n\n  function nominateMovie(movie) {\n    dispatch({ type: NOMINATE, movie: movie });\n  }\n\n  function removeNomination(id) {\n    dispatch({ type: REMOVE, id });\n  }\n\n  return { nominations, nominateMovie, removeNomination };\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}